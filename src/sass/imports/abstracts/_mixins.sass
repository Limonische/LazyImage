// Mixins
	
// Transition
=transition($type: all, $time: .3s, $transition: ease-in-out)
	transition: $type $time $transition

// Fluid font size
=fluidType($min-vw, $max-vw, $min-fs, $max-fs)
	$u1: unit($min-vw)
	$u2: unit($max-vw)
	$u3: unit($min-fs)
	$u4: unit($max-fs)

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4
		font-size: $min-fs
		@media screen and (min-width: $min-vw)
			font-size: calc(#{$min-fs} + #{strip-unit($max-fs - $min-fs)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
		@media screen and (min-width: $max-vw)
			font-size: $max-fs

// Media queries
=media($width...)
	@if length($width) == 1
		@media screen and (min-width: nth($width, 1))
			@content
	@if length($width) == 2
		@media screen and (min-width: nth($width, 1)) and (max-width: nth($width, 2))
			@content

// ClearFix for float
=clearFix
	&:after
		content: ''
		display: block
		clear: both

// Background for buttons
=btnBg($bg, $percentage, $mode: 'darken')
	background-color: $bg
	&:hover
		@if $mode == 'darken'
			background-color: darken($bg, $percentage)
		@if $mode == 'lighten'
			background-color: lighten($bg, $percentage)

// Grid based on float for browsers without css grid layout support
=floatGrid($columns, $margin)
	float: left
	margin: ($margin / 2)
	width: calc((100% - #{$margin * $columns}) / #{$columns} - 1px)
	&.long
		width: calc(((100% - #{$margin * $columns}) / #{$columns}) * 2 + #{$margin} - 1px)

// object-fit for browsers without support
=objectFit($fit: cover, $position: null)
	object-fit: $fit
	@if $position
		object-position: $position
		font-family: 'object-fit: #{$fit}; object-position: #{$position}'
	@else
		font-family: 'object-fit: #{$fit}'